// <auto-generated />
using System;
using HabitsApp.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HabitsApp.Server.Migrations
{
    [DbContext(typeof(HabitsAppDbContext))]
    partial class HabitsAppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HabitsApp.Shared.Entities.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Activities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 2,
                            Name = "Guitar"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 3,
                            Name = "Blazor"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 7,
                            Name = "Meditation"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 4,
                            Name = "LF8: Project - Data Serialization"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 5,
                            Name = "Italian"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 1,
                            Name = "Freeletics"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 1,
                            Name = "Running"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 6,
                            Name = "Video 3"
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 2,
                            Name = "Analog Photography"
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 2,
                            Name = "Digital Photography"
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 7,
                            Name = "Cook new healthy recipy"
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 3,
                            Name = "React"
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 5,
                            Name = "German"
                        });
                });

            modelBuilder.Entity("HabitsApp.Shared.Entities.CalendarEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.ToTable("CalendarEntries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActivityId = 3,
                            Date = new DateTime(2023, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            End = new DateTime(2023, 4, 12, 6, 20, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2023, 4, 12, 6, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            ActivityId = 7,
                            Comment = "First time running after a long time",
                            Date = new DateTime(2023, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            End = new DateTime(2023, 4, 12, 6, 55, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2023, 4, 12, 6, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            ActivityId = 1,
                            Date = new DateTime(2023, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            End = new DateTime(2023, 4, 12, 17, 30, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2023, 4, 12, 17, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            ActivityId = 1,
                            Date = new DateTime(2023, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            End = new DateTime(2023, 4, 12, 17, 50, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2023, 4, 12, 17, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            ActivityId = 5,
                            Date = new DateTime(2023, 4, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            End = new DateTime(2023, 4, 13, 17, 50, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2023, 4, 13, 17, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            ActivityId = 2,
                            Comment = "Started planning app (DB Design)",
                            Date = new DateTime(2023, 4, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            End = new DateTime(2023, 4, 13, 21, 15, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2023, 4, 13, 20, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("HabitsApp.Shared.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Sport"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Hobby"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Coding"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Ausbildung"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Language"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Youtube"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Health"
                        });
                });

            modelBuilder.Entity("HabitsApp.Shared.Entities.Goal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int>("DurationMinutes")
                        .HasColumnType("int");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.ToTable("Goals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActivityId = 3,
                            Date = new DateTime(2023, 4, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DurationMinutes = 15,
                            IsCompleted = false
                        },
                        new
                        {
                            Id = 2,
                            ActivityId = 1,
                            Date = new DateTime(2023, 4, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DurationMinutes = 45,
                            IsCompleted = false
                        },
                        new
                        {
                            Id = 3,
                            ActivityId = 5,
                            Date = new DateTime(2023, 4, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DurationMinutes = 30,
                            IsCompleted = false
                        },
                        new
                        {
                            Id = 4,
                            ActivityId = 7,
                            Date = new DateTime(2023, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DurationMinutes = 30,
                            IsCompleted = false
                        },
                        new
                        {
                            Id = 5,
                            ActivityId = 6,
                            Date = new DateTime(2023, 4, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DurationMinutes = 40,
                            IsCompleted = false
                        },
                        new
                        {
                            Id = 6,
                            ActivityId = 3,
                            Date = new DateTime(2023, 4, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DurationMinutes = 15,
                            IsCompleted = false
                        },
                        new
                        {
                            Id = 7,
                            ActivityId = 1,
                            Date = new DateTime(2023, 4, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DurationMinutes = 30,
                            IsCompleted = false
                        },
                        new
                        {
                            Id = 8,
                            ActivityId = 2,
                            Date = new DateTime(2023, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DurationMinutes = 660,
                            IsCompleted = true
                        });
                });

            modelBuilder.Entity("HabitsApp.Shared.Entities.Activity", b =>
                {
                    b.HasOne("HabitsApp.Shared.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("HabitsApp.Shared.Entities.CalendarEntry", b =>
                {
                    b.HasOne("HabitsApp.Shared.Entities.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Activity");
                });

            modelBuilder.Entity("HabitsApp.Shared.Entities.Goal", b =>
                {
                    b.HasOne("HabitsApp.Shared.Entities.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Activity");
                });
#pragma warning restore 612, 618
        }
    }
}
